@use "../../../styles" as *;

@import "../node_modules/bootstrap/scss/mixins";
@import "../node_modules/bootstrap/scss/functions";
@import "../node_modules/bootstrap/scss/variables";

$card-background-color: $light-font-color;
$card-title-color: $dark-font-color;
$footer-background-color: $main-color-light;

:global(.card) {
  box-shadow: 3px 3px 4px rgba(0, 0, 0, 0.1);
}

.card {
  overflow: hidden;

  -webkit-column-break-inside: avoid;
  page-break-inside: avoid;
  break-inside: avoid;

  cursor: pointer;

  transition: all 100ms ease-in-out;

  &:hover {
    transform: scale(1.02);
  }

  :global(.card-body) {
    background-color: $card-background-color;
  }

  .locationName {
    color: $card-title-color;
    font-weight: 600;
    font-size: toRem(18);

    word-wrap: break-word;
    word-break: break-word;

    margin-right: 8px;
  }

  .locationType {
    font-weight: 600;
    font-size: toRem(14);

    text-align: right;
  }

  .locationDimension {
    font-size: toRem(14);
  }

  .residents {
    background-color: $footer-background-color;
    color: $light-font-color;
  }

  width: columnWidthCalc(1, $list-gap);
  @include media-breakpoint-up(sm) {
    width: columnWidthCalc(2, $list-gap);
  }
  @include media-breakpoint-up(md) {
    width: columnWidthCalc(2, $list-gap);
  }
  @include media-breakpoint-up(lg) {
    width: columnWidthCalc(4, $list-gap);
  }
  @include media-breakpoint-up(xl) {
    width: columnWidthCalc(4, $list-gap);
  }
  @include media-breakpoint-up(xxl) {
    width: columnWidthCalc(5, $list-gap);
  }
}
